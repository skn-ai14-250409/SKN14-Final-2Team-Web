"""
Django settings for django_app project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
FASTAPI_URL = os.environ.get("FASTAPI_URL")

from dotenv import load_dotenv, find_dotenv
load_dotenv(find_dotenv(), override=False)  # 로컬 개발 시 .env 읽기

from pathlib import Path
from django.urls import reverse_lazy

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-qa_=+$5+uu6w5kmt0-wcr=e2053(k&g8!%yy@sk=&f0r-g!&(r'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Application definition

INSTALLED_APPS = [
    # 'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # allauth
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.naver',
    'allauth.socialaccount.providers.kakao',

    'app',
    'scentpick',
    "uauth.apps.UauthConfig",
]

SITE_ID = 1

AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
]

# 로그인/로그아웃 후 이동할 경로
LOGIN_URL = reverse_lazy("uauth:login")
LOGIN_REDIRECT_URL = "home"
LOGOUT_REDIRECT_URL = "/"
ACCOUNT_LOGIN_REDIRECT_URL = "/accounts/login/redirect/"
SOCIALACCOUNT_LOGIN_REDIRECT_URL = "/accounts/login/redirect/"

ACCOUNT_SIGNUP_REDIRECT_URL = reverse_lazy("uauth:complete_profile")
ACCOUNT_USER_MODEL_USERNAME_FIELD = "username"
ACCOUNT_LOGOUT_ON_GET = True
ACCOUNT_UNIQUE_EMAIL = False

ACCOUNT_ADAPTER = "uauth.adapters.CustomAccountAdapter"
SOCIALACCOUNT_ADAPTER = "uauth.adapters.CustomSocialAccountAdapter"

SOCIALACCOUNT_PROVIDERS = {
    "google": {
        "APP": {
            "client_id": os.getenv("GOOGLE_CLIENT_ID", ""),
            "secret": os.getenv("GOOGLE_CLIENT_SECRET", ""),
            "key": "",
        },
    },
    "naver": {
        "APP": {
            "client_id": os.getenv("NAVER_CLIENT_ID", ""),
            "secret": os.getenv("NAVER_CLIENT_SECRET", ""),
            "key": "",
        },
        # 옵션: scope 확장 (성별, 나이)
        "SCOPE": ["name", "email", "gender", "age"],
    },  
    "kakao": {
        "APP": {
            "client_id": os.getenv("KAKAO_CLIENT_ID"),  
            "secret": os.getenv("KAKAO_CLIENT_SECRET", ""),
            "key": "",
        },
        "SCOPE": ["account_email", "profile_nickname"],  # 이메일 + 닉네임 강제 요청
        "AUTH_PARAMS": {"prompt": "consent"},            # 동의창 매번 표시
    }
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR / 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_app.wsgi.application'
ASGI_APPLICATION = "django_app.asgi.application"

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# 운영 db
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.environ.get("DB_NAME", "scentpick"),
        'USER': os.environ.get("DB_USER", "admin"),
        'PASSWORD': os.environ.get("DB_PASSWORD", "yourpassword"),
        'HOST': os.environ.get("DB_HOST", "scentpickdb.ctcauieck9iz.ap-northeast-2.rds.amazonaws.com"),
        'PORT': os.environ.get("DB_PORT", "3306"),
        'OPTIONS': {
            'charset': 'utf8mb4',
        },
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# 로그인 성공 후, 리다이렉트 URL (기본값: /accuounts/profile/)
LOGIN_REDIRECT_URL = 'scentpick/'

# settings.py

ALLOWED_HOSTS = [
    "127.0.0.1",
    "localhost",
    "django-web-env.eba-q3jam8c8.ap-northeast-2.elasticbeanstalk.com",
    "scentpick.store",
    "www.scentpick.store",
]

# S3 storage settings (used by uauth.utils upload)
AWS_ACCESS_KEY_ID = os.getenv("AWS_ACCESS_KEY_ID")
AWS_SECRET_ACCESS_KEY = os.getenv("AWS_SECRET_ACCESS_KEY")
AWS_STORAGE_BUCKET_NAME = os.getenv("AWS_STORAGE_BUCKET_NAME")
AWS_S3_REGION_NAME = os.getenv("AWS_S3_REGION_NAME")

# Kakao JS 키(.env에서 로드)
KAKAO_JS_KEY = os.getenv("KAKAO_JS_KEY", "")

FASTAPI_CHAT_URL = os.environ.get("FASTAPI_CHAT_URL")
SERVICE_TOKEN    = os.environ.get("SERVICE_TOKEN")

CSRF_TRUSTED_ORIGINS = [
    "https://scentpick.store",
    "https://www.scentpick.store",
]