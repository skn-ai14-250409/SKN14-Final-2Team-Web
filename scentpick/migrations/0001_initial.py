# Generated by Django 5.2.5 on 2025-09-09 03:45

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NoteImage',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(blank=True, max_length=50, null=True)),
                ('note_name', models.CharField(blank=True, max_length=50, null=True)),
                ('image_url', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'note_images',
            },
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=40, null=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'conversations',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('system', 'system'), ('user', 'user'), ('assistant', 'assistant'), ('tool', 'tool')], max_length=10)),
                ('content', models.TextField()),
                ('model', models.CharField(blank=True, max_length=120, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='scentpick.conversation')),
            ],
            options={
                'db_table': 'messages',
            },
        ),
        migrations.CreateModel(
            name='Perfume',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('brand', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('sizes', models.JSONField(default=list, help_text='용량(ml) 리스트', null=True)),
                ('detail_url', models.CharField(blank=True, max_length=500, null=True)),
                ('description', models.TextField()),
                ('concentration', models.CharField(max_length=30)),
                ('gender', models.CharField(default='Unisex', help_text='마케팅/사용 대상으로 설정한 성별(Male/Female/Unisex)', max_length=10)),
                ('main_accords', models.JSONField()),
                ('top_notes', models.JSONField(blank=True, null=True)),
                ('middle_notes', models.JSONField(blank=True, null=True)),
                ('base_notes', models.JSONField(blank=True, null=True)),
                ('notes_score', models.JSONField(blank=True, null=True)),
                ('season_score', models.JSONField(blank=True, null=True)),
                ('day_night_score', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'perfumes',
                'indexes': [models.Index(fields=['brand'], name='perfumes_brand_ab6905_idx'), models.Index(fields=['name'], name='perfumes_name_d46302_idx'), models.Index(fields=['updated_at'], name='perfumes_updated_351f2f_idx')],
                'constraints': [models.UniqueConstraint(fields=('brand', 'name'), name='uq_perfume_brand_name')],
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL)),
                ('perfume', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='scentpick.perfume')),
            ],
            options={
                'db_table': 'favorites',
            },
        ),
        migrations.CreateModel(
            name='RecCandidate',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('rank', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('score', models.FloatField(default=0.0)),
                ('reason_summary', models.TextField(blank=True, null=True)),
                ('reason_detail', models.JSONField(blank=True, null=True)),
                ('retrieved_from', models.CharField(blank=True, help_text='후보를 가져온 소스/전략 라벨 (e.g., dense, bm25, rule)', max_length=120, null=True)),
                ('perfume', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rec_candidates', to='scentpick.perfume')),
            ],
            options={
                'db_table': 'rec_candidates',
            },
        ),
        migrations.CreateModel(
            name='FeedbackEvent',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('source', models.CharField(max_length=120)),
                ('action', models.CharField(max_length=50)),
                ('context', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_events', to=settings.AUTH_USER_MODEL)),
                ('perfume', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_events', to='scentpick.perfume')),
                ('rec_candidate', models.ForeignKey(blank=True, help_text='특정 추천 리스트에서 나온 후보와 연결 (없을 수도 있음)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feedback_events', to='scentpick.reccandidate')),
            ],
            options={
                'db_table': 'feedback_events',
            },
        ),
        migrations.CreateModel(
            name='RecRun',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('parsed_slots', models.JSONField(blank=True, null=True)),
                ('agent', models.CharField(blank=True, max_length=120, null=True)),
                ('model_version', models.CharField(blank=True, max_length=120, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('conversation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rec_runs', to='scentpick.conversation')),
                ('request_msg', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='as_request_of_rec_runs', to='scentpick.message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rec_runs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'rec_runs',
            },
        ),
        migrations.AddField(
            model_name='reccandidate',
            name='run_rec',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidates', to='scentpick.recrun'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['user'], name='conversatio_user_id_0d3af7_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['updated_at'], name='conversatio_updated_8d1310_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['conversation', 'created_at'], name='messages_convers_3ebb41_idx'),
        ),
        migrations.AddIndex(
            model_name='favorite',
            index=models.Index(fields=['user'], name='favorites_user_id_bc3324_idx'),
        ),
        migrations.AddIndex(
            model_name='favorite',
            index=models.Index(fields=['perfume'], name='favorites_perfume_ec78ea_idx'),
        ),
        migrations.AddConstraint(
            model_name='favorite',
            constraint=models.UniqueConstraint(fields=('user', 'perfume'), name='uq_favorite_user_perfume'),
        ),
        migrations.AddIndex(
            model_name='feedbackevent',
            index=models.Index(fields=['user', 'created_at'], name='feedback_ev_user_id_9d7f89_idx'),
        ),
        migrations.AddIndex(
            model_name='feedbackevent',
            index=models.Index(fields=['perfume'], name='feedback_ev_perfume_4da022_idx'),
        ),
        migrations.AddIndex(
            model_name='feedbackevent',
            index=models.Index(fields=['rec_candidate'], name='feedback_ev_rec_can_965c48_idx'),
        ),
        migrations.AddIndex(
            model_name='feedbackevent',
            index=models.Index(fields=['action'], name='feedback_ev_action_cf0bae_idx'),
        ),
        migrations.AddIndex(
            model_name='recrun',
            index=models.Index(fields=['user', 'created_at'], name='rec_runs_user_id_e0474b_idx'),
        ),
        migrations.AddIndex(
            model_name='reccandidate',
            index=models.Index(fields=['run_rec', 'rank'], name='rec_candida_run_rec_91f4cb_idx'),
        ),
        migrations.AddIndex(
            model_name='reccandidate',
            index=models.Index(fields=['perfume'], name='rec_candida_perfume_2647b9_idx'),
        ),
        migrations.AddConstraint(
            model_name='reccandidate',
            constraint=models.UniqueConstraint(fields=('run_rec', 'perfume'), name='uq_rec_candidate_run_perfume'),
        ),
    ]
